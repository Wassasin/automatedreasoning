*** This is NuSMV 2.5.4 (compiled on Fri Oct 28 13:48:41 UTC 2011)
*** Enabled addons are: compass 
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Please report bugs to <nusmv-users@fbk.eu>

*** Copyright (c) 2010, Fondazione Bruno Kessler

*** This version of NuSMV is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of NuSMV is linked to the MiniSat SAT solver. 
*** See http://www.cs.chalmers.se/Cs/Research/FormalMethods/MiniSat
*** Copyright (c) 2003-2005, Niklas Een, Niklas Sorensson 

WARNING *** This version of NuSMV is linked to the zchaff SAT         ***
WARNING *** solver (see http://www.princeton.edu/~chaff/zchaff.html). ***
WARNING *** Zchaff is used in Bounded Model Checking when the         ***
WARNING *** system variable "sat_solver" is set to "zchaff".          ***
WARNING *** Notice that zchaff is for non-commercial purposes only.   ***
WARNING *** NO COMMERCIAL USE OF ZCHAFF IS ALLOWED WITHOUT WRITTEN    ***
WARNING *** PERMISSION FROM PRINCETON UNIVERSITY.                     ***
WARNING *** Please contact Sharad Malik (malik@ee.princeton.edu)      ***
WARNING *** for details.                                              ***

WARNING *** The model contains PROCESSes or ISAs. ***
WARNING *** The HRC hierarchy will not be usable. ***
-- specification AG !(c = 99)  is false
-- as demonstrated by the following execution sequence
Trace Description: CTL Counterexample 
Trace Type: Counterexample 
-> State: 1.1 <-
  c = 1
  p1.i = 0
  p1.x = 0
  p2.i = 0
  p2.x = 0
-> Input: 1.2 <-
  _process_selector_ = p1
  running = FALSE
  p2.running = FALSE
  p1.running = TRUE
-> State: 1.2 <-
  p1.i = 1
  p1.x = 1
-> Input: 1.3 <-
  _process_selector_ = p2
  p2.running = TRUE
  p1.running = FALSE
-> State: 1.3 <-
  p2.i = 1
  p2.x = 1
-> Input: 1.4 <-
-> State: 1.4 <-
  p2.i = 2
  p2.x = 2
-> Input: 1.5 <-
-> State: 1.5 <-
  c = 2
  p2.i = 0
-> Input: 1.6 <-
  _process_selector_ = p1
  p2.running = FALSE
  p1.running = TRUE
-> State: 1.6 <-
  p1.i = 2
  p1.x = 3
-> Input: 1.7 <-
-> State: 1.7 <-
  c = 3
  p1.i = 0
-> Input: 1.8 <-
-> State: 1.8 <-
  p1.i = 1
-> Input: 1.9 <-
  _process_selector_ = p2
  p2.running = TRUE
  p1.running = FALSE
-> State: 1.9 <-
  p2.i = 1
  p2.x = 3
-> Input: 1.10 <-
-> State: 1.10 <-
  p2.i = 2
  p2.x = 6
-> Input: 1.11 <-
-> State: 1.11 <-
  c = 6
  p2.i = 0
-> Input: 1.12 <-
-> State: 1.12 <-
  p2.i = 1
-> Input: 1.13 <-
-> State: 1.13 <-
  p2.i = 2
  p2.x = 12
-> Input: 1.14 <-
-> State: 1.14 <-
  c = 12
  p2.i = 0
-> Input: 1.15 <-
-> State: 1.15 <-
  p2.i = 1
-> Input: 1.16 <-
-> State: 1.16 <-
  p2.i = 2
  p2.x = 24
-> Input: 1.17 <-
-> State: 1.17 <-
  c = 24
  p2.i = 0
-> Input: 1.18 <-
-> State: 1.18 <-
  p2.i = 1
-> Input: 1.19 <-
-> State: 1.19 <-
  p2.i = 2
  p2.x = 48
-> Input: 1.20 <-
-> State: 1.20 <-
  c = 48
  p2.i = 0
-> Input: 1.21 <-
-> State: 1.21 <-
  p2.i = 1
-> Input: 1.22 <-
  _process_selector_ = p1
  p2.running = FALSE
  p1.running = TRUE
-> State: 1.22 <-
  p1.i = 2
  p1.x = 51
-> Input: 1.23 <-
-> State: 1.23 <-
  c = 51
  p1.i = 0
-> Input: 1.24 <-
  _process_selector_ = p2
  p2.running = TRUE
  p1.running = FALSE
-> State: 1.24 <-
  p2.i = 2
  p2.x = 99
-> Input: 1.25 <-
-> State: 1.25 <-
  c = 99
  p2.i = 0
